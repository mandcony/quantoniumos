Module,Type,Path,Classes,Primary_Functions,Dependencies,Entry_Point,Test_Coverage,Description
core.enhanced_rft_crypto_v2,Core Crypto,core/enhanced_rft_crypto_v2.py,"CipherMetrics,EnhancedRFTCryptoV2","encrypt_aead,decrypt_aead,_feistel_encrypt,_round_function,_derive_round_keys,_keyed_mds_layer","hashlib,hmac,secrets,struct,numpy","Yes (__main__)",High,"Primary cryptographic module with 64-round Feistel network, AEAD mode, and RFT integration"
core.canonical_true_rft,Core RFT,core/canonical_true_rft.py,CanonicalTrueRFT,"canonical_transform,bidirectional_rft,parallel_transform","numpy,scipy","Yes (__main__)",Medium,"Canonical RFT implementation for quantum-inspired transformations"
core.topological_quantum_kernel,Core Quantum,core/topological_quantum_kernel.py,TopologicalQuantumKernel,"quantum_operation,topological_mapping,kernel_transform","numpy","Yes (__main__)",Medium,"Topological quantum kernel for quantum state operations"
core.enhanced_topological_qubit,Core Qubit,core/enhanced_topological_qubit.py,"TopologyType,TopologicalInvariant,VertexManifold,TopologicalEdge,EnhancedTopologicalQubit","create_manifold,compute_invariant,edge_evolution","numpy,enum","Yes (__main__)",Medium,"Enhanced topological qubit implementation with manifold structures"
core.working_quantum_kernel,Core Quantum,core/working_quantum_kernel.py,WorkingQuantumKernel,"quantum_transform,state_evolution,measurement","numpy","Yes (__main__)",Medium,"Working quantum kernel for practical quantum operations"
core.geometric_waveform_hash,Core Hash,core/geometric_waveform_hash.py,GeometricWaveformHash,"compute_hash,geometric_transform,waveform_analysis","numpy,hashlib","Yes (__main__)",Low,"Geometric waveform-based hash function implementation"
crypto_validation.realistic_tabulated_proofs,Validation,crypto_validation/scripts/realistic_tabulated_proofs.py,RealisticTabulatedProofs,"generate_differential_proof_table,generate_linear_proof_table,calculate_realistic_thresholds","pandas,numpy,scipy,secrets","No",High,"Comprehensive differential and linear cryptanalysis with statistical validation"
crypto_validation.simplified_tabulated_proofs,Validation,crypto_validation/scripts/simplified_tabulated_proofs.py,SimplifiedTabulatedProofs,"generate_differential_table,generate_linear_table,generate_avalanche_table","pandas,numpy,secrets","No",High,"Simplified proof generation for rapid cryptographic validation"
crypto_validation.differential_analysis,Analysis,crypto_validation/scripts/differential_analysis.py,DifferentialCryptanalysis,"run_differential_analysis,analyze_s_box,compute_differential_table","numpy,secrets,pandas","No",High,"Focused differential cryptanalysis implementation"
crypto_validation.linear_analysis,Analysis,crypto_validation/scripts/linear_analysis.py,LinearCryptanalysis,"run_linear_analysis,compute_linear_table,analyze_bias","numpy,secrets,pandas","No",High,"Linear cryptanalysis with bias computation and analysis"
crypto_validation.avalanche_analysis,Analysis,crypto_validation/scripts/avalanche_analysis.py,AvalancheAnalyzer,"analyze_avalanche_effect,bit_independence_test,statistical_analysis","numpy,scipy,pandas","No",High,"Avalanche effect analysis for cryptographic primitives"
crypto_validation.post_quantum_analysis,Analysis,crypto_validation/scripts/post_quantum_analysis.py,PostQuantumSecurityAnalysis,"analyze_quantum_resistance,lattice_analysis,discrete_log_analysis","numpy,scipy","No",Medium,"Post-quantum cryptographic security analysis"
crypto_validation.timing_analysis,Analysis,crypto_validation/scripts/timing_analysis.py,TimingAnalyzer,"analyze_timing_patterns,constant_time_verification,side_channel_analysis","time,statistics,numpy","No",Medium,"Timing analysis and side-channel attack resistance testing"
validation.crypto_performance_test,Test,validation/tests/crypto_performance_test.py,CryptoPerformanceTest,"run_performance_tests,benchmark_throughput,memory_analysis","time,psutil,numpy","Yes (__main__)",High,"Performance testing and benchmarking for cryptographic operations"
validation.final_comprehensive_validation,Test,validation/tests/final_comprehensive_validation.py,ComprehensiveValidator,"run_all_tests,generate_report,validate_system","multiple core modules","No",High,"Comprehensive system-wide validation and testing"
apps.quantum_simulator,Application,apps/quantum_simulator.py,QuantumSimulator,"simulate_quantum_circuit,run_algorithm,visualize_results","numpy,matplotlib","Yes (__main__)",Low,"Quantum algorithm simulation and visualization"
apps.quantum_crypto,Application,apps/quantum_crypto.py,QuantumCrypto,"encrypt_data,decrypt_data,key_generation","core.enhanced_rft_crypto_v2","Yes (__main__)",Medium,"Quantum-inspired cryptographic application interface"
apps.q_vault,Application,apps/q_vault.py,QVault,"store_secrets,retrieve_secrets,manage_keys","core.enhanced_rft_crypto_v2","No",Low,"Secure vault application for sensitive data storage"
apps.q_notes,Application,apps/q_notes.py,QNotes,"create_note,encrypt_note,search_notes","core.enhanced_rft_crypto_v2","No",Low,"Encrypted note-taking application"
apps.rft_validation_suite,Application,apps/rft_validation_suite.py,RFTValidationSuite,"run_validation,generate_report,analyze_results","crypto_validation scripts","No",Medium,"RFT validation suite application wrapper"
frontend.quantonium_desktop,Frontend,frontend/quantonium_desktop.py,QuantoniumDesktop,"initialize_desktop,handle_events,manage_apps","tkinter,apps modules","Yes (__main__)",Low,"Main desktop GUI application"
frontend.quantonium_os_main,Frontend,frontend/quantonium_os_main.py,QuantoniumOSMain,"start_os,manage_services,handle_user_input","frontend,apps,core","Yes (__main__)",Low,"Primary OS interface and service manager"
frontend.launch_quantonium_os,Launcher,frontend/launch_quantonium_os.py,OSLauncher,"launch_system,initialize_components,startup_sequence","frontend modules","Yes (__main__)",Low,"System launcher and initialization"
tools.paths,Utility,tools/paths.py,PathManager,"resolve_paths,validate_directories,setup_environment","os,pathlib","Yes (__main__)",Low,"Path management and environment setup utilities"
tools.imports,Utility,tools/imports.py,ImportManager,"resolve_imports,validate_dependencies,setup_modules","importlib,sys","Yes (__main__)",Low,"Import resolution and dependency management"
tools.config,Utility,tools/config.py,ConfigManager,"load_config,validate_settings,setup_environment","json,yaml,os","Yes (__main__)",Low,"Configuration management and validation"
tools.print_rft_invariants,Utility,tools/print_rft_invariants.py,RFTInvariantPrinter,"print_invariants,analyze_properties,generate_report","numpy,math","Yes (__main__)",Low,"RFT mathematical invariant analysis and reporting"
ASSEMBLY.quantonium_os,Assembly,ASSEMBLY/quantonium_os.py,QuantoniumOSAssembly,"assemble_os,compile_modules,link_binaries","build system","No",Low,"Assembly-level OS compilation and linking"
ASSEMBLY.python_bindings.vertex_quantum_rft,Binding,ASSEMBLY/python_bindings/vertex_quantum_rft.py,VertexQuantumRFT,"vertex_transform,quantum_binding,rft_interface","core modules","No",Low,"Python bindings for vertex-based quantum RFT operations"
quantonium_boot,Bootstrap,quantonium_boot.py,QuantoniumBootstrap,"initialize_system,load_modules,start_services","all core modules","Yes (__main__)",Medium,"System bootstrap and initialization sequence"
security_maintenance_toolkit,Security,security_maintenance_toolkit.py,SecurityMaintenanceToolkit,"run_security_checks,generate_reports,maintain_system","validation modules","No",Medium,"Security maintenance and monitoring toolkit"
