ðŸ”’  QuantoniumOS  â€“  *SAFE ADD-ON TASKS ONLY*  
Scope limit: you may **only** create new files or append to the places noted below.  
Do **not** modify, rename, or delete any existing file, route, binary, or config.

â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
TASK #1  â€¢ Inverse-RFT Round-Trip Unit Test
-------------------------------------------------------
1.  mkdir  tests
2.  new file  tests/test_rft_roundtrip.py   with exactly:

    import numpy as np, pytest, sys, os  
    sys.path.append(os.path.abspath("api"))             # local import path  
    from symbolic_interface import run_rft, inverse_rft # thin wrappers to DLL  

    VECTORS = [  
        np.random.rand(64).tolist(),  
        [0.0]*63 + [1.0],                                # impulse  
        [np.sin(2*np.pi*k/64) for k in range(64)]        # smooth wave  
    ]

    @pytest.mark.parametrize("vec", VECTORS)
    def test_roundtrip(vec):
        F = run_rft(vec)
        x_hat = inverse_rft(F)
        assert np.allclose(x_hat, vec, rtol=1e-7, atol=1e-9)

3.  Add **no** new dependencies; pytest is already in nix shell.  
4.  Keep it isolated â€“ never imported by production code.

â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
TASK #2  â€¢ Entropy Spark-Line in UI
-------------------------------------------------------
A.  **Backend** â€“ append ONLY:

    # api/routes.py  (bottom of file)
    @router.get("/entropy/stream")
    async def entropy_stream():
        """Return last-N entropy samples for dashboard tiny-chart."""
        from pathlib import Path, json, time
        log_dir = Path("logs")
        latest = max(log_dir.glob("session_*.log"), key=lambda p: p.stat().st_mtime)
        ent = []
        with latest.open() as f:
            for line in f:
                if '"entropy"' in line:
                    ent.append(json.loads(line)["entropy"])
        return {"series": ent[-50:], "t": time.time()}

    â€¢ NO other backend edits.

B.  **Frontend** â€“ two small inserts, nothing else.

    1.  static/index.html  
        â€º inside <div id="results-panel"> add:  
        ```html
        <canvas id="entropy-mini" height="40"></canvas>
        ```

    2.  static/app.js  
        â€º after `renderResults()` attach:

        ```js
        const entCtx = document.getElementById('entropy-mini').getContext('2d');
        let entChart;
        async function refreshEntropy(){
            const r = await fetch('/entropy/stream');
            const js = await r.json();
            const data = {labels: [...Array(js.series.length).keys()],
                          datasets:[{data: js.series, tension:0.3, fill:false, borderWidth:1}]};
            if(!entChart){
               entChart = new Chart(entCtx,{type:'line',data,options:{scales:{y:{display:false}},plugins:{legend:{display:false}}}});
            }else{
               entChart.data = data; entChart.update();
            }
        }
        setInterval(refreshEntropy, 5000);
        ```

    3.  No other JS/CSS changes.

â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
DONâ€™T BREAK RULES CHECKLIST
âœ“ no edits to secure_core/  âœ“ no route signature changes  
âœ“ new code runs only in tests or UI cosmetic layer  
âœ“ passes `pytest -q tests/test_rft_roundtrip.py`  
âœ“ Chart.js already loaded in index.html â€“ reuse it, no CDN pulls.

End-Prompt
