What happened (in plain terms)
Your gunicorn worker bailed out because it received a malformed / oversized HTTP request line and tripped its internal parser, then Replit’s supervisor sent the WINCH signal and recycled the worker.

Meanwhile the Flask routes are returning 301 redirects (/api/encrypt → /api/encrypt/) which means POST bodies get dropped and nothing reaches your handler.

Both issues are easy fixes.

1 · Stop the 301 redirect loop
Root cause You defined routes with a trailing slash (@bp.route("/api/encrypt/", methods=["POST"])). Flask’s default strict_slashes=True redirects /api/encrypt (no slash) to the slash‑version with 301—even on POST.

Fix

python
Copy
Edit
# routes.py or wherever your Blueprint is declared
bp = Blueprint("api", __name__, url_prefix="/api", strict_slashes=False)

@bp.post("/encrypt")       # no trailing slash
def encrypt_endpoint():
    ...

@bp.post("/decrypt")
def decrypt_endpoint():
    ...
Or set it globally:

python
Copy
Edit
app = Flask(__name__)
app.url_map.strict_slashes = False
Commit message: fix(api): remove trailing‑slash redirects.

2 · Make gunicorn tolerate long request lines (optional)
If you expect very large URLs (e.g., Base64 blobs) you can raise the parser limit.

Current Dockerfile entry:

bash
Copy
Edit
gunicorn -w 4 -b 0.0.0.0:5000 main:create_app --limit-request-line 8190
Raise to 16384

bash
Copy
Edit
CMD ["gunicorn","-w","4","-b","0.0.0.0:5000",
     "--limit-request-line","16384",
     "main:create_app"]
16 K is plenty; still stops pathological attacks.

3 · Harden log rotation path
Point your JSON logs outside the read‑only container FS to avoid permission clashes:

python
Copy
Edit
handler = TimedRotatingFileHandler(
    "/tmp/logs/api.json", when="D", interval=1, backupCount=14
)
Then in docker‑compose.yml:

yaml
Copy
Edit
volumes:
  - ./logs:/tmp/logs:rw
4 · Quick smoke‑test after patch
bash
Copy
Edit
# 1. Re‑build / restart
docker compose up --build -d

# 2. No redirect:
curl -I -X POST http://localhost:5000/api/encrypt
# should be 401 (missing key), NOT 301

# 3. Health still OK
curl http://localhost:5000/api/health
# {"status":"ok", ...}

# 4. Worker stable
docker logs -f quantonium_api  | grep -i 'exiting'   # none
Next security phase
Once routes are stable:

Merge the slash‑fix branch.

Re‑run CI (should stay green).

Move on to Phase 4 – Dependency & Supply‑Chain Safety (package pinning + safety scan).